<Window x:Class="ZoneFbx.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZoneFbx.GUI"
        Background="#606060"
        mc:Ignorable="d"
        MinHeight="650"
        MinWidth="750"
        Title="ZoneFbx.GUI" Height="575" Width="652">
    <Window.Resources>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
        </Style>

        <Style TargetType="Button">
            <Setter Property="Background" Value="#444444"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#555555"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </Window.Resources>
    <Grid Margin="10,25,10,-6">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="210" />
        </Grid.RowDefinitions>
        <TextBox Name="ConsoleTextBox"
                     Text="{Binding ConsoleString}"
                     MinWidth="700" MinHeight="350"
                     IsReadOnly="True"
                     VerticalScrollBarVisibility="Visible"
                     HorizontalScrollBarVisibility="Auto" Margin="0,0,0,10"
                     />
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Grid.Row="1">
            <TextBox
                Text="{Binding GamePath}"
                TextChanged="GamePathChanged"
                Width="550"
                Height="20"
                />
            <Button Content="Select game folder" Click="SelectGamePath" Width="120" Height="20"/>
            <LineBreak/>
            
            <TextBox Text="{Binding OutputPath}"
                     TextChanged="OutputPathChanged"
                     Width="550" Height="20"
                     />
            <Button Content="Select output folder" Click="SelectOutputPath" Width="120" Height="20"/>
            <LineBreak/>
            <ComboBox Name="LevelComboBox"
                      Width="550"
                      IsEditable="True"
                      ItemsSource="{Binding FilteredLevels}"
                      DisplayMemberPath="DisplayValue"
                      Text="{Binding Level, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}"
                      IsTextSearchEnabled="False"
                >
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel
                                VirtualizingPanel.IsVirtualizing="True"
                                VirtualizingPanel.VirtualizationMode="Standard"
                                />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
            <Label>Level</Label>
            <LineBreak/>
            <Grid Width="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                
                <CheckBox IsChecked="{Binding EnableLightshaft, Mode=TwoWay}">Enable lightshaft models</CheckBox>
                <CheckBox Grid.Column="1" IsChecked="{Binding EnableLighting, Mode=TwoWay}">Enable lighting</CheckBox>
                <CheckBox Grid.Column="2" IsChecked="{Binding EnableFestival, Mode=TwoWay}">Enable festival models</CheckBox>
                
                <CheckBox Grid.Row="1" IsChecked="{Binding DisableBaking, Mode=TwoWay}">Disable baking textures</CheckBox>
                <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding EnableBlend, Mode=TwoWay}">Enable blended textures</CheckBox>
                <Button Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" Margin="0 0 60 0" Click="OpenConfigWindow">Additional Settings</Button>
                
                <CheckBox Grid.Row="2" IsChecked="{Binding EnableJsonExport, Mode=TwoWay}">Debug: Enable JSON export</CheckBox>
                <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding EnableMTMap, Mode=TwoWay}">Debug: Material texture map</CheckBox>
            </Grid>
            <LineBreak/>
            <LineBreak/>
            <Button Content="Extract map" Click="ExportMap" Width="120" Height="36">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Level}" Value="">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ExecInProgress}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </TextBlock>
    </Grid>
</Window>
